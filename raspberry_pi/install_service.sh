#!/bin/bash

# Script d'installation du service Palazzeti Controller
# Usage: sudo ./install_service.sh

set -e

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rifier que le script est ex√©cut√© en tant que root
if [ "$EUID" -ne 0 ]; then
    log_error "Ce script doit √™tre ex√©cut√© en tant que root (utilisez sudo)"
    exit 1
fi

log_info "üè≠ Installation du service Palazzeti Controller"
echo "=================================================="

# Variables
SERVICE_NAME="palazzeti-controller"
SERVICE_FILE="/etc/systemd/system/${SERVICE_NAME}.service"
PROJECT_DIR="/home/pi/Palazzeti-Controller"
SERVICE_DIR="${PROJECT_DIR}/raspberry_pi"
VENV_DIR="${SERVICE_DIR}/venv"
LOG_DIR="/var/log/palazzeti-controller"

# V√©rifier que le r√©pertoire du projet existe
if [ ! -d "$PROJECT_DIR" ]; then
    log_error "Le r√©pertoire du projet n'existe pas: $PROJECT_DIR"
    log_info "Assurez-vous que le projet est clon√© dans le bon r√©pertoire"
    exit 1
fi

# V√©rifier que le r√©pertoire raspberry_pi existe
if [ ! -d "$SERVICE_DIR" ]; then
    log_error "Le r√©pertoire raspberry_pi n'existe pas: $SERVICE_DIR"
    exit 1
fi

log_info "üìÅ R√©pertoire du projet: $PROJECT_DIR"
log_info "üìÅ R√©pertoire du service: $SERVICE_DIR"

# Arr√™ter le service s'il est d√©j√† en cours d'ex√©cution
if systemctl is-active --quiet $SERVICE_NAME; then
    log_info "Arr√™t du service existant..."
    systemctl stop $SERVICE_NAME
fi

# D√©sactiver le service s'il existe
if systemctl is-enabled --quiet $SERVICE_NAME; then
    log_info "D√©sactivation du service existant..."
    systemctl disable $SERVICE_NAME
fi

# Cr√©er le r√©pertoire de logs
log_info "üìÅ Cr√©ation du r√©pertoire de logs: $LOG_DIR"
mkdir -p $LOG_DIR
chown pi:pi $LOG_DIR
chmod 755 $LOG_DIR

# Installer la configuration de rotation des logs
log_info "üìÑ Installation de la configuration de rotation des logs..."
if [ -f "palazzeti-controller.logrotate" ]; then
    cp palazzeti-controller.logrotate /etc/logrotate.d/palazzeti-controller
    chmod 644 /etc/logrotate.d/palazzeti-controller
    log_success "Configuration de rotation des logs install√©e"
else
    log_warning "Fichier de configuration de rotation des logs non trouv√©"
fi

# V√©rifier et cr√©er l'environnement virtuel si n√©cessaire
if [ ! -d "$VENV_DIR" ]; then
    log_info "üì¶ Cr√©ation de l'environnement virtuel Python..."
    cd $SERVICE_DIR
    sudo -u pi python3 -m venv venv
    log_success "Environnement virtuel cr√©√©"
fi

# Activer l'environnement virtuel et installer les d√©pendances
log_info "üì¶ Installation des d√©pendances Python..."
cd $SERVICE_DIR
sudo -u pi $VENV_DIR/bin/pip install --upgrade pip
sudo -u pi $VENV_DIR/bin/pip install -r requirements.txt
log_success "D√©pendances install√©es"

# Copier le fichier de service
log_info "üìÑ Installation du fichier de service systemd..."
cp palazzeti-controller.service $SERVICE_FILE

# Adapter le chemin dans le fichier de service si n√©cessaire
if [ "$PROJECT_DIR" != "/home/pi/Palazzeti-Controller" ]; then
    log_info "üîß Adaptation des chemins dans le fichier de service..."
    sed -i "s|/home/pi/Palazzeti-Controller|$PROJECT_DIR|g" $SERVICE_FILE
fi

# Recharger systemd
log_info "üîÑ Rechargement de la configuration systemd..."
systemctl daemon-reload

# Activer le service
log_info "‚úÖ Activation du service..."
systemctl enable $SERVICE_NAME

# D√©marrer le service
log_info "üöÄ D√©marrage du service..."
systemctl start $SERVICE_NAME

# Attendre un peu pour que le service d√©marre
sleep 3

# V√©rifier le statut du service
if systemctl is-active --quiet $SERVICE_NAME; then
    log_success "Service install√© et d√©marr√© avec succ√®s!"
    echo ""
    log_info "üìä Statut du service:"
    systemctl status $SERVICE_NAME --no-pager -l
    echo ""
    log_info "üìã Commandes utiles:"
    echo "  ‚Ä¢ Voir les logs: sudo journalctl -u $SERVICE_NAME -f"
    echo "  ‚Ä¢ Red√©marrer: sudo systemctl restart $SERVICE_NAME"
    echo "  ‚Ä¢ Arr√™ter: sudo systemctl stop $SERVICE_NAME"
    echo "  ‚Ä¢ Statut: sudo systemctl status $SERVICE_NAME"
    echo ""
    log_info "üåê Interface web: http://$(hostname -I | awk '{print $1}'):5000"
else
    log_error "√âchec du d√©marrage du service"
    log_info "V√©rifiez les logs avec: sudo journalctl -u $SERVICE_NAME -f"
    exit 1
fi

log_success "Installation termin√©e!"
